name: CI (Docker)

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Lint e Prettier antes dos testes
      - name: Rodar o Linter
        run: docker compose -f docker-compose.yml --profile test run --rm node-test npm run lint

      - name: Verificar formatação (Prettier)
        run: docker compose -f docker-compose.yml --profile test run --rm node-test npm run format:check

      - name: Compilar o código TypeScript
        run: docker compose -f docker-compose.yml --profile test run --rm node-test npm run build

      # Build + Testes
      - name: Build containers
        run: docker compose -f docker-compose.yml --profile test build

      - name: Subir containers e rodar testes
        run: docker compose -f docker-compose.yml --profile test up --abort-on-container-exit --exit-code-from node-test

      - name: Upload coverage report
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

      - name: Rodar testes E2E
        run: docker compose -f docker-compose.yml --profile test run --rm node-test npm run test:e2e

      - name: Derrubar containers
        if: always()
        run: docker compose -f docker-compose.yml --profile test down
