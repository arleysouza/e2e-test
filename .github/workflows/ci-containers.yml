name: CI (Docker)

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Lint e Prettier fora dos containers (mais rápido)
      - name: Instalar dependências para lint e build
        run: npm ci

      - name: Rodar o Linter
        run: npm run lint

      - name: Verificar formatação (Prettier)
        run: npm run format:check

      - name: Compilar o código TypeScript
        run: npm run build

      # Testes de integração
      - name: Rodar testes de integração (docker-compose.test.yml)
        run: |
          docker compose -f docker-compose.test.yml up --build --abort-on-container-exit --exit-code-from node-test

      - name: Upload coverage report (integração)
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-integration
          path: coverage

      # Testes E2E
      - name: Rodar testes E2E (docker-compose.e2e.yml)
        run: |
          docker compose -f docker-compose.e2e.yml up --build --abort-on-container-exit --exit-code-from node-e2e-test

      - name: Upload coverage report (E2E)
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-e2e
          path:
            coverage

            # Derrubar containers (garantia)
      - name: Derrubar containers de teste
        if: always()
        run: |
          docker compose -f docker-compose.test.yml down -v || true
          docker compose -f docker-compose.e2e.yml down -v || true
